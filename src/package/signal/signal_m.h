//
// Generated file, do not edit! Created by opp_msgc 4.5 from package/signal/signal.msg.
//

#ifndef _WSN_ENERGY_SIGNAL_M_H_
#define _WSN_ENERGY_SIGNAL_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif


namespace wsn_energy {

/**
 * Class generated from <tt>package/signal/signal.msg</tt> by opp_msgc.
 * <pre>
 * packet Raw{
 *     bool bitError;
 *     
 *     
 *     int headerLength = 6;
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     int maxPayloadLength = 127;
 * }
 * </pre>
 */
class Raw : public ::cPacket
{
  protected:
    bool bitError_var;
    int headerLength_var;
    int maxPayloadLength_var;

  private:
    void copy(const Raw& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Raw&);

  public:
    Raw(const char *name=NULL, int kind=0);
    Raw(const Raw& other);
    virtual ~Raw();
    Raw& operator=(const Raw& other);
    virtual Raw *dup() const {return new Raw(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual bool getBitError() const;
    virtual void setBitError(bool bitError);
    virtual int getHeaderLength() const;
    virtual void setHeaderLength(int headerLength);
    virtual int getMaxPayloadLength() const;
    virtual void setMaxPayloadLength(int maxPayloadLength);
};

inline void doPacking(cCommBuffer *b, Raw& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Raw& obj) {obj.parsimUnpack(b);}

}; // end namespace wsn_energy

#endif // _WSN_ENERGY_SIGNAL_M_H_
